우리는 "http://www.law.go.kr/행정규칙/개인정보의안전성확보조치기준"에서,
================================================================
 제7조(개인정보의 암호화)
① 개인정보처리자는 고유식별정보, 비밀번호, 바이오정보를 정보통신망을 통하여 송신하거나 보조저장매체 등을 통하여 전달하는 경우에는 이를 암호화하여야 한다.

② 개인정보처리자는 비밀번호 및 바이오정보는 암호화하여 저장하여야 한다. 다만, 비밀번호를 저장하는 경우에는 복호화되지 아니하도록 일방향 암호화하여 저장하여야 한다.

③ 개인정보처리자는 인터넷 구간 및 인터넷 구간과 내부망의 중간 지점(DMZ : Demilitarized Zone)에 고유식별정보를 저장하는 경우에는 이를 암호화하여야 한다.

④ 개인정보처리자가 내부망에 고유식별정보를 저장하는 경우에는 다음 각 호의 기준에 따라 암호화의 적용여부 및 적용범위를 정하여 시행할 수 있다.

1. 법 제33조에 따른 개인정보 영향평가의 대상이 되는 공공기관의 경우에는 해당 개인정보 영향평가의 결과

2. 암호화 미적용시 위험도 분석에 따른 결과

⑤ 개인정보처리자는 제1항, 제2항, 제3항, 또는 제4항에 따라 개인정보를 암호화하는 경우 안전한 암호알고리즘으로 암호화하여 저장하여야 한다.

⑥ 개인정보처리자는 암호화된 개인정보를 안전하게 보관하기 위하여 안전한 암호 키 생성, 이용, 보관, 배포 및 파기 등에 관한 절차를 수립·시행하여야 한다.

⑦ 개인정보처리자는 업무용 컴퓨터 또는 모바일 기기에 고유식별정보를 저장하여 관리하는 경우 상용 암호화 소프트웨어 또는 안전한 암호화 알고리즘을 사용하여 암호화한 후 저장하여야 한다.

⑧ [별표]의 유형1 및 유형2에 해당하는 개인정보처리자는 제6항을 아니할 수 있다.
================================================================
라는 기준에 따라 비밀번호를 암호화하여야 한다.

암호화 방법: SHA-256
추가로 쓴 기법: 암호화 반복 수행, salt(Salt)


암호화 반복이란? 말 그대로 암호화를 여러번 실행하는 것. 암호화 된 값을 또 암호화. 이것을 반복.

salt란? 각 사용자마다 부여된 고유한 값을 비밀번호에 붙여 암호화하는 것.
ex) DB에 값이 다음과 같이 저장되어 있을 때(비밀번호는 123456이라고 가정)
user_id		pw_hashing								salt
user1		343099b2867417f1b60462a8c70aa9dc33f4b1cec287fdb22e9fcf9b999ee3ce		sffs13osz043opq9dsfdkj32 

user1이 로그인하려고 비밀번호 123456을 입력
->
salt를 쓰지 않는다면 (123456->hashinig->해싱된 결과값)이 나오고 나온 결과값과 pw_hashing의 값을 비교한다.
이렇게 써도 상관없으나 salt를 썼을 때보다 보안이 좀 더 취약하다고 한다.
->
salt를 쓴다면 사용자가 비밀번호 123456을 입력했을때 과정이
(123456sffs13osz043opq9dsfdkj32->hashing->해싱된 결과값)이 나오고 이는 salt를 사용하지 않았을 때보다 더 안전하다고 한다.

쉽게 말하자면 salt는 사용자의 비밀번호를 좀 더 길게 늘리는 과정이다.

하지만 salt를 쓰려면 각 사용자에 대한 고유값을 저장할 salt컬럼을 추가해줘야 한다.
salt 컬럼을 추가하지 않고 고유값으로 각 사용자의 이메일을 사용하면 어떨까?->사용자의 이메일은 PK니까 어짜피 고유값이므로
->이럴 경우 완전 랜덤하게 생성되는 salt값을 쓰는 것보단 덜 안전하겠지만 salt컬럼을 따로 추가하지 않아도 된다.


결론: 비밀번호 저장할 때 암호화 써야됨. 암호화 예제코드 있고 우리 프로젝트에 적용할 수 있음.
대신 암호화하면 비밀번호의 길이가 64글자(영어와 숫자로 구성된)가 되므로 비밀번호 컬럼의 데이터 타입은 varchar2(64)이상으로 줘야한다.

참고사이트: https://st-lab.tistory.com/100